{
  "version": 3,
  "sources": ["../src/js/helpers/importGlobalScript.ts", "../src/js/elements/UrlUppy.ts"],
  "sourcesContent": ["const imported = new Set()\n\nexport const importGlobalScript = async (url: string, name: string) => {\n    if (imported.has(name) || window[name]) return Promise.resolve(window[name])\n\n    return new Promise((resolve) => {\n        const script = document.createElement('script')\n        script.src = url\n        script.onload = () => {\n            imported.add(name)\n            resolve(window[name])\n        }\n        document.head.appendChild(script)    \n    })    \n}", "import { ElementBase } from './ElementBase'\nimport { html } from 'uhtml/async'\nimport { importGlobalScript } from '../helpers/importGlobalScript'\nimport { t, Language } from '../core/Language'\nimport { onlyUnique } from '../helpers/onlyUnique'\n\nconst instances = new Map()\n\nexport class UrlUppy extends ElementBase {\n\n  private uppy: any\n\n  constructor (...args) {\n    super(...args)\n    this.attributes.type = 'url'\n\n    const url = 'https://releases.transloadit.com/uppy/v2.4.1/uppy.min.css'\n    this.form.renderer.extraStylesheets.add(url)\n  }\n\n  async wrapper (innerTemplates: Array<typeof html> = [], isDisplayOnly = false) {\n    if (isDisplayOnly) return super.wrapper(innerTemplates)\n    const Uppy = await importGlobalScript('https://releases.transloadit.com/uppy/v2.4.1/uppy.js', 'Uppy')\n\n    const values = this.parentValues?.[this.mainBinding].$\n    .filter(value => value && !value['@language'] || value && value['@language'] === Language.l10nLanguage)\n    .map(item => item?.['@value'] ?? item?.['@id'])\n    .filter(onlyUnique)\n\n    const template = html`\n    <div onclick=${[(event) => {\n      const element = event?.explicitOriginalTarget?.closest('.uppy-Dashboard-Item-action--remove')\n      if (element) {\n        const result = confirm(t.direct(`Are you sure?`))\n        if (!result) event.stopPropagation()  \n      }\n    }, { capture: true }]} ref=${element => {\n      if (!instances.has(this.definition['form:binding']?._)) {\n\n        this.uppy = new Uppy.Core()\n        .use(Uppy.ThumbnailGenerator, {\n          thumbnailWidth: 200,\n          waitForThumbnailsBeforeUpload: false,\n        })\n        .use(Uppy.Url, {\n          companionUrl: this.definition['form:uppyCompanion']?._,\n        })\n        .use(Uppy.Dashboard, {\n          inline: true,\n          hideCancelButton: true,\n          showRemoveButtonAfterComplete: true,\n          target: element,\n          plugins: ['Url']\n        })\n        .use(Uppy.AwsS3Multipart, {\n          limit: 4,\n          companionUrl: this.definition['form:uppyCompanion']?._,\n        })\n\n        for (const value of values) {\n          const url = new URL(value)\n          const name = url.pathname.substr(1)\n\n          this.uppy.addFile({\n            name,\n            meta: {\n              relativePath: value\n            },\n            data: '',\n            isRemote: true,\n          })    \n        }\n\n        this.uppy.on('file-removed', (file, reason) => {\n          if (reason === 'removed-by-user') {\n            this.form.dispatchEvent(new CustomEvent('file-deleted', {\n              detail: { file }\n            }))\n          }\n        })\n\n        this.uppy.on('upload-success', (file, response) => {\n          this.form.dispatchEvent(new CustomEvent('file-added', {\n            detail: { file, response }\n          }))\n        })\n\n        this.uppy.getFiles().forEach(file => {\n          const image = new Image()\n          image.onload = () => this.uppy.setFileState(file.id, { preview: file.meta.relativePath })  \n          image.src = file.meta.relativePath\n\n          this.uppy.setFileState(file.id, { \n            progress: { uploadComplete: true, uploadStarted: true } \n          })\n        })\n\n        instances.set(this.definition['form:binding']?._, this.uppy)\n      }\n    }} class=\"drag-and-drop-area\"></div>`\n\n    return super.wrapper([template])\n  }\n\n  addButton () {\n    return null\n  }\n\n}"],
  "mappings": "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",
  "names": []
}
